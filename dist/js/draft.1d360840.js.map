{"version":3,"sources":["webpack:///./src/components/WrapSelectic.vue?99ca","webpack:///./src/views/Draft.vue?a829","webpack:///./src/components/SelecticDraft.vue","webpack:///./src/components/WrapSelectic.vue","webpack:///./src/components/WrapSelectic.vue?f7ae","webpack:///./src/components/SelecticDraft.vue?0cc8","webpack:///./src/views/Draft.vue","webpack:///./src/views/Draft.vue?a8a8","webpack:///./src/views/Draft.vue?e455","webpack:///./src/components/SelecticDraft.vue?c054"],"names":["_hoisted_1","class","_hoisted_2","render","_ctx","_cache","$props","$setup","$data","$options","_component_SelecticDraft","highlight","highlighter","language","line-numbers","html","reason","infoMessage","msg","key","redraw","type","scrollTest","params","selecticParams","child","selecticChild","value","selecticValue","drawId","messages","saveCode","JSON","stringify","classNames","style","id","options","optionValue","groups","placeholder","optionPlaceholder","title","optionTitle","multiple","disabled","selectionIsExcluded","texts","open","noCache","optionParams","val","$emit","elementChild","length","opt","tagName","label","text","icon","subopt","group","name","props","needRedraw","computed","this","list","Object","assign","fetchCallback","kind","nb","delay","match","nbItems","getItemsCallback","opts","content","get","push","time","join","methods","message","watch","sendInfo","newParams","oldParams","e","components","Selectic","__exports__","getJSON","str","replace","_str","_q","quotedAttr","attr","_q2","attribute","quotedStr","extractCode","search","document","location","rslt","decodeURIComponent","$nextTick","htmlChange","isHTMLValid","split","filter","evt","preventDefault","code","encodeURIComponent","href","includes","endsWith","console","dir","isValid","elem","parseHTML","map","el","index","lngth","mode","capture","isDynamic","modes","outside","lookFor","escape","isCapturing","inside","attributeValue","childText","end","mainLoop","char","charAt","nextChar","conf","test","startsWith","isTagName","slice","trim","parse","err","error","valid","idx","SelecticDraft"],"mappings":"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","file":"js/draft.1d360840.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./WrapSelectic.vue?vue&type=style&index=0&id=f1ada614&lang=css\"","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"home\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Selectic sandbox\", -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_SelecticDraft = _resolveComponent(\"SelecticDraft\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createVNode(_component_SelecticDraft)\n  ]))\n}","<template>\n<div class=\"half\">\n    <fieldset>\n        <legend>\n            Vue component\n        </legend>\n        <textarea\n            :class=\"{\n                'html-draft': true,\n                'has-error': !isHTMLValid,\n                'my-editor': true,\n            }\"\n            v-model=\"html\"\n            :highlight=\"highlighter\"\n            language=\"vue\"\n            line-numbers\n        />\n        <!-- <prism-editor\n            :class=\"{\n                'html-draft': true,\n                'has-error': !isHTMLValid,\n                'my-editor': true,\n            }\"\n            v-model=\"html\"\n            :highlight=\"highlighter\"\n            language=\"vue\"\n            line-numbers\n        /> -->\n        <div v-if=\"reason\"\n            class=\"error-message\"\n        >\n            {{reason}}\n        </div>\n        <div v-for=\"msg of infoMessage\"\n            class=\"info-message\"\n            :key=\"msg\"\n        >\n            {{msg}}\n        </div>\n        <div>\n            <button\n                @click=\"redraw\"\n            >\n                Redraw component\n            </button>\n        </div>\n        <div>\n            <label>\n                <input type=\"checkbox\" v-model=\"scrollTest\">\n                Embed component in a scroll element\n            </label>\n        </div>\n    </fieldset>\n    <fieldset\n        :class=\"{'scroll-test': scrollTest}\"\n    >\n        <legend>\n            Example result\n        </legend>\n\t<div class=\"spanHeight\"></div>\n\n        <div class=\"demo\">\n            <Selectic\n                :params=\"selecticParams\"\n                :child=\"selecticChild\"\n                @input=\"(value) => selecticValue = value\"\n                :key=\"`selectic-${drawId}`\"\n                @info=\"(msg) => messages = msg\"\n            />\n        </div>\n\t<div class=\"spanHeight\"></div>\n\n        <label @dblclick=\"saveCode\">\n            Selected value: <output>{{JSON.stringify(selecticValue)}}</output>\n        </label>\n    </fieldset>\n</div>\n</template>\n<script>\n/* eslint-disable no-empty-character-class */\n\nimport { defineComponent } from 'vue';\nimport Selectic from './WrapSelectic.vue';\n// import { PrismEditor } from 'vue-prism-editor';\n// import { highlight, languages } from \"prismjs/components/prism-core\";\n\n// import 'prismjs';\n// import 'prismjs/themes/prism.css';\n// import { PrismEditor } from \"vue-prism-editor\";\n// import \"vue-prism-editor/dist/prismeditor.min.css\"; // import the styles somewhere\n\n// import highlighting library (you can use any library you want just return html string)\n// import { highlight, languages } from \"prismjs/components/prism-core\";\n// import \"prismjs/components/prism-clike\";\n// import \"prismjs/components/prism-javascript\";\n// import \"prismjs/themes/prism-tomorrow.css\"; // import syntax highlighting styles\n\n\nfunction getJSON(str) {\n    /**\n     * Get attribute string with their values (if quoted)\n     * (?:\n     *     ([\"'])\n     *     ([^\\1\\n]+?)\n     *     \\1\n     *  |\n     *     (?<!['\"\\w])\n     *     (\\w+)\n     * )\n     * \\s*:\n     * (?:\n     *     \\s*\n     *     ([\"'])\n     *     ([^\\4\\n]*?)\n     *     \\4\n     * )?\n     */\n    return str.replace(\n        /(?:([\"'])([^\\1\\n]+?)\\1|(\\w+))\\s*:(?:\\s*([\"'])([^\\4\\n]*?)\\4)?/g,\n        (_str, _q, quotedAttr, attr, _q2, value) =>\n    {\n        const attribute = quotedAttr || attr;\n        const val = value ? `\"${value}\"` : '';\n        return `\"${attribute}\":${val}`;\n    }).replace(/'([^'\\n]*?)'/g, (str, quotedStr) => {\n        return `\"${quotedStr}\"`;\n    });\n}\n\nfunction extractCode() {\n    const search = document.location.search;\n    const [,rslt=''] = search.match(/[?&]code=((?:\\w|%)+)\\b/) || [];\n    return decodeURIComponent(rslt);\n}\n\nexport default defineComponent({\n    name: 'Draft',\n    data() {\n        this.$nextTick(() => {\n            this.htmlChange();\n            this.redraw();\n        });\n        return {\n            html: extractCode() || '<Selectic\\n    :options=\"\\'list1\\'\"\\n/>',\n            selecticParams: {\n                options: 'list1',\n            },\n            selecticChild: [],\n            isHTMLValid: true,\n            selecticValue: null,\n\n            reason: '',\n            messages: {\n                needRedraw: false,\n                message: '',\n            },\n            drawId: 0,\n            scrollTest: false,\n        };\n    },\n    computed: {\n        infoMessage() {\n            const message = this.messages;\n            const messages = message.message.split('\\n').filter((str) => str);\n\n            if (message.needRedraw) {\n                messages.push('The component needs to be redrawn');\n            }\n\n            return messages;\n        },\n    },\n    methods: {\n        redraw() {\n            this.selecticValue = null;\n            this.drawId++;\n        },\n        onKey(evt) {\n            const key = evt.key;\n\n            if (key === 'Tab') {\n                evt.preventDefault;\n            }\n        },\n        saveCode() {\n            const code = encodeURIComponent(this.html).replace(/-/g, '%2D');\n            let href = document.location.href;\n\n            href = href.replace(/(?:&|(?<=\\?))code=[^&]*/, '');\n            if (!href.includes('?')) {\n                href += '?';\n            }\n\n            if (!href.endsWith('?')) {\n                href += '&';\n            }\n\n            href += `code=${code}`;\n\n            console.dir(href);\n        },\n\n        highlighter(code) {\n        //    return highlight(code, languages.js); //returns html\n            return code.replace(/</g, '&lt;');\n        },\n\n        htmlChange() {\n            const html = this.html;\n\n            const [isValid, , elem] = this.parseHTML(html);\n\n            this.isHTMLValid = isValid !== false;\n\n            if (elem) {\n                const selecticParams = elem.params;\n                const selecticChild = elem.child.map((elem) => {\n                    const options = elem.child.filter((el) => el.tagName !== 'text').map((el) => {\n                        // TODO data\n                        return {\n                            tagName: el.tagName,\n                            id: el.params.id || el.params.value,\n                            text: el.params.label || (el.child[0] && el.child[0].params && el.child[0].params.text),\n                            title: el.params.title,\n                            disabled: el.params.disabled,\n                            icon: el.params.icon,\n                            group: el.params.group,\n                            options: [],\n                        };\n                    });\n                    // TODO data\n                    return {\n                        tagName: elem.tagName,\n                        id: elem.params.id || elem.params.value,\n                        text: elem.params.label || (elem.child[0] && elem.child[0].params && elem.child[0].params.text),\n                        title: elem.params.title,\n                        disabled: elem.params.disabled,\n                        icon: elem.params.icon,\n                        group: elem.params.group,\n                        options: options,\n                    };\n                });\n\n                this.selecticParams = selecticParams;\n                this.selecticChild = selecticChild;\n            }\n        },\n\n        parseHTML(html, name = '') {\n            let index = 0;\n            const lngth = html.length;\n            let mode = 'outside';\n            let capture = '';\n            let attribute = '';\n            let isDynamic = false;\n\n            let tagName = '';\n            const params = {};\n            const child = [];\n\n            const modes = {\n                outside: {\n                    lookFor: /[<]/,\n                    escape: /[]/,\n                    isCapturing: false,\n                },\n                inside: {\n                    lookFor: /[/>:\\w]/,\n                    escape: /[]/,\n                    isCapturing: false,\n                },\n                tagName: {\n                    lookFor: /[\\s>]/,\n                    escape: /[]/,\n                    isCapturing: true,\n                },\n                attribute: {\n                    lookFor: /[=\\s>]/,\n                    escape: /[]/,\n                    isCapturing: true,\n                },\n                attributeValue: {\n                    lookFor: /[\"]/,\n                    escape: /[\\\\]/,\n                    isCapturing: true,\n                },\n                child: {\n                    lookFor: /[^\\s]/,\n                    escape: /[]/,\n                    isCapturing: false,\n                },\n                childText: {\n                    lookFor: /[<]/,\n                    escape: /[]/,\n                    isCapturing: true,\n                },\n                end: {\n                    lookFor: /./,\n                    escape: /[]/,\n                    isCapturing: false,\n                },\n            };\n\n            mainLoop: for (index = 0; index < lngth; index++) {\n                const char = html.charAt(index);\n                const nextChar = html.charAt(index + 1);\n                const conf = modes[mode];\n\n                if (conf.lookFor.test(char)) {\n                    switch (mode) {\n                        case 'outside':\n                            mode = 'tagName';\n                            break;\n                        case 'inside':\n                            if (char === '/') {\n                                if (nextChar !== '>') {\n                                    this.reason = 'wrong tag ending';\n                                    return [false];\n                                }\n                                index++;\n                                mode = 'end';\n                                break mainLoop;\n                            }\n                            if (char === '>') {\n                                mode = 'child';\n                                break;\n                            }\n                            mode = 'attribute';\n                            if (char !== ':') {\n                                isDynamic = false;\n                                /* To capture the 1st letter */\n                                index--;\n                            } else {\n                                isDynamic = true;\n                            }\n                            break;\n                        case 'tagName':\n                            tagName = capture;\n                            if (tagName === '') {\n                                this.reason = 'empty tagName';\n                                return [false];\n                            }\n                            if (tagName.startsWith('/')) {\n                                const isTagName = tagName.slice(1) === name;\n                                if (!isTagName) {\n                                    this.reason = 'wrong tag ending';\n                                }\n\n                                return [isTagName, index + 1, {}, []];\n                            }\n                            if (char === '>') {\n                                mode = 'child';\n                            } else {\n                                mode = 'inside';\n                            }\n                            break;\n                        case 'attribute':\n                            attribute = capture.trim();\n                            if (char === '=') {\n                                mode = 'attributeValue';\n                                if (nextChar === ' ') {\n                                    index++;\n                                }\n                                index++;\n                            } else {\n                                params[attribute] = true;\n                                mode = 'inside';\n                            }\n                            break;\n                        case 'attributeValue':\n                            try {\n                                if (isDynamic) {\n                                    params[attribute] = JSON.parse(getJSON(capture));\n                                } else {\n                                    params[attribute] = capture;\n                                }\n                            } catch (err) {\n                                this.reason = 'attribute value is not correct';\n                                console.error('Error while parsing attribute value \"%s\"', capture, err.message);\n                                return [false];\n                            }\n                            mode = 'inside';\n                            break;\n                        case 'child':\n                            if (char === '<') {\n                                const [valid, idx, elem] = this.parseHTML(html.slice(index), tagName);\n                                if (valid === false) {\n                                    return [false];\n                                }\n                                index += idx;\n                                if (valid === true) {\n                                    mode = 'end';\n                                    break mainLoop;\n                                }\n                                child.push(elem);\n\n                                break;\n                            }\n                            mode = 'childText';\n                            index--;\n                            break;\n                        case 'childText':\n                            child.push({\n                                params:{text: capture.trim()},\n                                child: [],\n                                tagName: 'text',\n                            });\n                            mode = 'child';\n                            index--;\n                            break;\n                    }\n                    capture = '';\n                } else {\n                    if (conf && conf.isCapturing) {\n                        capture += char;\n                        if (conf.escape.test(char)) {\n                            capture += nextChar;\n                            index++;\n                        }\n                    }\n                }\n            }\n\n            if (mode !== 'end') {\n                this.reason = `tag ${tagName} is not finished`;\n                return [false];\n            }\n\n            this.reason = '';\n\n            return [null, index, {params, child, tagName}];\n        },\n    },\n    watch: {\n        html() {\n            this.htmlChange();\n        },\n    },\n    components: {\n        Selectic,\n        // PrismEditor,\n    },\n});\n</script>\n<style>\n.has-error {\n    border-color: red;\n    border-width: 2px;\n    box-shadow: inset 0 0 15px red;\n}\n.error-message {\n    height: 1.2em;\n    color: #FF6666;\n}\n.info-message {\n    height: 1.2em;\n    color: #3366FF;\n}\n.half {\n    display: grid;\n    grid-template: max-content / 1fr 1fr;\n    grid-column-gap: 15px;\n}\n.half > fieldset {\n    overflow: auto;\n}\n\n.prism-editor__textarea,\n.html-draft {\n    width: 500px;\n    height: 600px;\n    min-height: 100px;\n    min-width: 100px;\n}\n.my-editor {\n    background: #2d2d2d;\n    color: #ccc;\n\n    font-family: Fira code, Fira Mono, Consolas, Menlo, Courier, monospace;\n    font-size: 14px;\n    line-height: 1.5;\n    padding: 5px;\n}\n.prism-editor__textarea:focus {\n    outline: none;\n}\n\n.scroll-test {\n    max-height: 100vh;\n}\n.spanHeight {\n    height: 0;\n}\n.scroll-test .spanHeight {\n    height: 100vh;\n}\n\n.positionBottom {\n    margin-top: 100vh;\n}\n</style>\n","\n<template>\n<Selectic\n    class=\"example\"\n    :class=\"classNames\"\n    :style=\"style\"\n    :id=\"id\"\n    :options=\"options\"\n    :value=\"optionValue\"\n    :groups=\"groups\"\n    :placeholder=\"optionPlaceholder\"\n    :title=\"optionTitle\"\n    :multiple=\"multiple\"\n    :disabled=\"disabled\"\n    :selectionIsExcluded=\"selectionIsExcluded\"\n    :texts=\"texts\"\n    :open=\"open\"\n    :noCache=\"noCache\"\n    :params=\"optionParams\"\n\n    @input=\"(val) => $emit('input', val)\"\n>\n    <template v-if=\"elementChild.length > 0\">\n        <template v-for=\"opt of elementChild\">\n            <optgroup v-if=\"opt.tagName === 'optgroup'\"\n                :value=\"opt.id\"\n                :label=\"opt.text\"\n                :disabled=\"!!opt.disabled\"\n                :title=\"opt.title\"\n                :icon=\"opt.icon\"\n                :key=\"opt.id\"\n            >\n                <option v-for=\"subopt of opt.options\"\n                    :value=\"subopt.id\"\n                    :disabled=\"!!subopt.disabled\"\n                    :title=\"subopt.title\"\n                    :icon=\"subopt.icon\"\n                    :key=\"subopt.id\"\n                >\n                    {{subopt.text}}\n                </option>\n            </optgroup>\n            <option v-else\n                :value=\"opt.id\"\n                :disabled=\"!!opt.disabled\"\n                :title=\"opt.title\"\n                :icon=\"opt.icon\"\n                :group=\"opt.group\"\n                :key=\"opt.id\"\n            >\n                {{opt.text}}\n            </option>\n        </template>\n    </template>\n</Selectic>\n</template>\n<script>\nimport Selectic from 'selectic';\nimport { defineComponent } from 'vue';\n\nimport {\n    dicList,\n    dicDescription,\n} from '@/helpers/optionsData';\nimport {\n    buildFetchCallback,\n    buildGetItemsCallback,\n    nbItemPerDynGroup,\n} from '@/helpers/tools';\n\nexport default defineComponent({\n    name: 'WrapSelectic',\n    props: {\n        params: {\n            default() {\n                return {};\n            },\n        },\n        child: {\n            default() {\n                return [];\n            },\n        },\n    },\n    data() {\n        return {\n            needRedraw: false,\n        };\n    },\n    computed: {\n        options() {\n            const opt = this.params.options;\n            if (typeof opt === 'undefined') {\n                return;\n            }\n            if (typeof opt === 'string') {\n                const list = dicList[opt];\n                if (list) {\n                    return list;\n                }\n                return [];\n            }\n\n            return opt;\n        },\n\n        classNames() {\n            return this.params['class'];\n        },\n        style() {\n            return this.params.style;\n        },\n        id() {\n            return this.params.id;\n        },\n        multiple() {\n            return this.params.multiple;\n        },\n        disabled() {\n            return this.params.disabled;\n        },\n        optionValue() {\n            return this.params.value || null;\n        },\n        optionPlaceholder() {\n            return this.params.placeholder;\n        },\n        optionTitle() {\n            return this.params.title;\n        },\n        groups() {\n            return this.params.groups;\n        },\n        optionParams() {\n            const params = Object.assign({}, this.params.params);\n\n            if (typeof params.fetchCallback === 'string') {\n                const [,kind, nb, delay] = params.fetchCallback.match(/(\\w+?)(\\d+)(?:[-:]+(\\d+))?/) || [];\n                const nbItems = kind === 'group' ? -nb : +nb;\n                params.fetchCallback = buildFetchCallback(nbItems, +delay || 0);\n            }\n\n            if (typeof params.getItemsCallback === 'string') {\n                const [,kind, nb, delay] = params.getItemsCallback.match(/(\\w+?)(\\d+)(?:[-:]+(\\d+))?/) || [];\n                const nbItems = kind === 'group' ? -nb : +nb;\n                params.getItemsCallback = buildGetItemsCallback(nbItems, +delay || 0);\n            }\n\n            return params;\n        },\n        open() {\n            return this.params.open;\n        },\n        noCache() {\n            return this.params.noCache;\n        },\n        selectionIsExcluded() {\n            return this.params.selectionIsExcluded;\n        },\n        texts() {\n            return this.params.texts;\n        },\n\n        elementChild() {\n            return this.child;\n        },\n\n        message() {\n            const msg = [];\n            const opts = this.params.options;\n            const fetchCallback = this.params.params && this.params.params.fetchCallback;\n            const getItemsCallback = this.params.params && this.params.params.getItemsCallback;\n\n            if (typeof opts === 'string') {\n                const list = dicList[opts];\n                const content = dicDescription.get(list);\n                if (content) {\n                    msg.push(`'${opts}' is a shorthand for a list containing ${content}.`);\n                } else {\n                    msg.push(`'${opts}' is not correctly interpreted by the example page!`);\n                }\n            }\n\n            if (typeof fetchCallback === 'string') {\n                const [,kind, nb, delay = 0] = fetchCallback.match(/(\\w+?)(\\d+)(?:[-:]+(\\d+))?/) || [];\n                let content = '';\n                let time = '';\n\n                if (kind === 'group') {\n                    content = `${nb} groups (with ${nbItemPerDynGroup} items each)`;\n                } else {\n                    content = `${nb} items`;\n                }\n                if (delay > 0) {\n                    time = `[resolved after a delay of ${delay}ms]`;\n                } else {\n                    time = `[resolved immediately]`;\n                }\n                msg.push(`'${fetchCallback}' is a shorthand for a promise which return ${content}. ${time}`);\n            }\n\n            if (typeof getItemsCallback === 'string') {\n                const [,kind, nb, delay = 0] = getItemsCallback.match(/(\\w+?)(\\d+)(?:[-:]+(\\d+))?/) || [];\n                let content = '';\n                let time = '';\n\n                if (kind === 'group') {\n                    content = `${nb} groups (with ${nbItemPerDynGroup} items each)`;\n                } else {\n                    content = `${nb} items`;\n                }\n                if (delay > 0) {\n                    time = `[resolved after a delay of ${delay}ms]`;\n                } else {\n                    time = `[resolved immediately]`;\n                }\n                msg.push(`'${getItemsCallback}' is a shorthand for a promise which get items from ${content}. ${time}`);\n            }\n\n            return msg.join('\\n');\n        },\n    },\n    methods: {\n        sendInfo() {\n            this.$emit('info', {\n                needRedraw: this.needRedraw,\n                message: this.message,\n            });\n        },\n    },\n    watch: {\n        needRedraw() {\n            this.sendInfo();\n        },\n        message() {\n            this.sendInfo();\n        },\n        multiple() {\n            this.needRedraw = true;\n        },\n        'params.params'(newParams, oldParams) {\n            try {\n                if (JSON.stringify(oldParams) !== JSON.stringify(newParams)) {\n                    this.needRedraw = true;\n                }\n            } catch(e) {\n                return;\n            }\n        },\n    },\n    created() {\n        this.sendInfo();\n    },\n    components: {\n        Selectic,\n    },\n});\n</script>\n<style>\n.example {\n    max-width: 500px;\n}\n</style>\n","import { render } from \"./WrapSelectic.vue?vue&type=template&id=f1ada614\"\nimport script from \"./WrapSelectic.vue?vue&type=script&lang=js\"\nexport * from \"./WrapSelectic.vue?vue&type=script&lang=js\"\n\nimport \"./WrapSelectic.vue?vue&type=style&index=0&id=f1ada614&lang=css\"\n\nimport exportComponent from \"/home/mariat/dev/selectic-demo/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./SelecticDraft.vue?vue&type=template&id=78ae56c6\"\nimport script from \"./SelecticDraft.vue?vue&type=script&lang=js\"\nexport * from \"./SelecticDraft.vue?vue&type=script&lang=js\"\n\nimport \"./SelecticDraft.vue?vue&type=style&index=0&id=78ae56c6&lang=css\"\n\nimport exportComponent from \"/home/mariat/dev/selectic-demo/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { defineComponent } from 'vue';\nimport SelecticDraft from '@/components/SelecticDraft.vue';\n\nexport default defineComponent({\n    name: 'Home',\n    components: {\n        SelecticDraft,\n    },\n});\n","import { render } from \"./Draft.vue?vue&type=template&id=20964e3c&ts=true\"\nimport script from \"./Draft.vue?vue&type=script&lang=ts\"\nexport * from \"./Draft.vue?vue&type=script&lang=ts\"\n\nimport \"./Draft.vue?vue&type=style&index=0&id=20964e3c&lang=css\"\n\nimport exportComponent from \"/home/mariat/dev/selectic-demo/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Draft.vue?vue&type=style&index=0&id=20964e3c&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./SelecticDraft.vue?vue&type=style&index=0&id=78ae56c6&lang=css\""],"sourceRoot":""}